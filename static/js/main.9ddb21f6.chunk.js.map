{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-lists.component.jsx","components/search/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monste","id","name","email","Cardlist","monster","map","Search","placeholder","onChange","type","App","handleChange","e","setState","searchField","target","value","state","fetch","then","response","json","user","this","filterField","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iUAGaA,EAAO,SAAAC,GAChB,OAAO,sBAAKC,UAAU,iBAAf,UACP,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAAMI,OAAOC,GAAvC,4BACtB,6BAAKL,EAAMI,OAAOE,OAClB,4BAAIN,EAAMI,OAAOG,YCJRC,EAAW,SAAAR,GAClB,OAAO,qBAAKC,UAAU,YAAf,SACRD,EAAMS,QAAQC,KAAI,SAAAN,GAAM,OACtB,cAAC,EAAD,CAAsBA,OAAQA,GAAnBA,EAAOC,UCHZM,G,MAAQ,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAcC,EAAjB,EAAiBA,SAAjB,OACd,uBAAOZ,UAAU,SACjBa,KAAK,SACLF,YAAaA,EACbC,SAAUA,MCqCFE,G,wDApCb,aAAe,IAAD,8BACZ,gBASHC,aAAe,SAACC,GACf,EAAKC,SAAS,CAACC,YAAcF,EAAEG,OAAOC,SATpC,EAAKC,MAAO,CACVb,QAAQ,GAERU,YAAc,IALJ,E,qDAcb,WAAoB,IAAD,OAChBI,MAAM,8CACLC,MAAM,SAAAC,GAAQ,OAAIA,EAASC,UAC3BF,MAAK,SAAAG,GAAI,OAAI,EAAKT,SAAS,CAACT,QAAUkB,S,oBAE3C,WACK,MAAiCC,KAAKN,MAA9Bb,EAAR,EAAQA,QAAUU,EAAlB,EAAkBA,YACZU,EAAcpB,EAAQqB,QAAQ,SAAArB,GAAO,OACxCA,EAAQH,KAAKyB,cAAcC,SAASb,EAAYY,kBAEtD,OACE,sBAAK9B,UAAU,MAAf,UACA,iDACA,cAAC,EAAD,CACAW,YAAY,iBACZC,SAAUe,KAAKZ,eACf,cAAC,EAAD,CAAUP,QAASoB,W,GA/BPI,cCKHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.9ddb21f6.chunk.js","sourcesContent":["import React from \"react\";\r\nimport './card.component.style.css';\r\n\r\nexport const Card = props => {\r\n    return <div className=\"card-container\">\r\n    <img alt=\"Monster\" src={`https://robohash.org/${props.monste.id}?set=set2&size=180x180`}/>\r\n    <h2>{props.monste.name}</h2>\r\n    <p>{props.monste.email}</p>\r\n    </div>\r\n}\r\n ","import React from \"react\";\r\nimport \"./card-lists.style.css\";\r\n import { Card } from \"../card/card.component\";\r\nexport const Cardlist = props => {\r\n      return <div className=\"card-list\">\r\n    {props.monster.map(monste => (\r\n       <Card key={monste.id} monste={monste} />\r\n     ))}\r\n    </div>\r\n   };","import React from \"react\";\r\nimport \"./search-box.component.css\";\r\n\r\nexport const Search =({ placeholder , onChange}) => \r\n      (<input className=\"search\"\r\n       type='search' \r\n       placeholder={placeholder}\r\n       onChange={onChange}\r\n      />)\r\n;\r\n","import React, { Component } from 'react';\nimport {Cardlist} from './components/card-list/card-lists.component';\nimport {Search} from \"./components/search/search-box.component\"\nimport './App.css';\n\n\n\nclass App extends Component{\n  constructor() {\n    super();\n    this.state ={ \n      monster:[ \n      ],\n      searchField : \"\"\n  }\n\n} \n\n handleChange = (e) => {\n  this.setState({searchField : e.target.value});\n }\n\n   componentDidMount(){\n      fetch(\"https://jsonplaceholder.typicode.com/users\")\n      .then( response => response.json())\n      .then(user => this.setState({monster : user}))\n   }\n  render(){\n       const { monster , searchField} = this.state;\n       const filterField = monster.filter( monster => \n          monster.name.toLowerCase().includes(searchField.toLowerCase())\n       )\n    return (\n      <div className=\"App\">\n      <h1>Monster Rolodex</h1>\n      <Search \n      placeholder=\"Search monster\"\n      onChange={this.handleChange}/>\n      <Cardlist monster={filterField} />\n     </div>\n    )\n  }\n}\n\nexport default App;\n ","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}